{
  "hash": "44cdfb541ede4b5648c92f694e95f3c9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Project 1\"\nexecute:\n  eval: false\nproject:\n  execute-dir: project\n---\n\n\n\n\nProject 1 is about a single cell sequencing project of zebrafish retina. Photoreceptors were damaged with MNU and the response was investigated with help of transgenic fish that contained contstruct with a non-coding element (careg) regulating attached to a EGFP transcript, that can be used as regenerative activation marker. For single-cell transcriptomics analysis, cell suspensions were created from retinal cells, and processed with the 10x 3' kit. \n\n## Available data\n\nData has been downloaded and prepared for you from [GEO GSE202212](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE202212). The format is `.h5`, and contains the count matrices after running `cellranger`. To create the count tables, the EGFP sequence was added to the reference genome. The gene name of EGFP is `GFPx`. \n\nIn order to download the data, run:\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nwget thedata.tar.gz\ntar -xzcvf thedata.tar.gz\n```\n:::\n\n\n\n\n\nAfter extracting, you see that there are eight files with count matrices:\n\n```\nGSM6106352_ctrl1_filtered_feature_bc_matrix.h5\nGSM6106353_ctrl2_filtered_feature_bc_matrix.h5\nGSM6106354_3dp1_filtered_feature_bc_matrix.h5\nGSM6106355_3dp2_filtered_feature_bc_matrix.h5\nGSM6106356_7dp1_filtered_feature_bc_matrix.h5\nGSM6106357_7dp2_filtered_feature_bc_matrix.h5\nGSM6106358_10dp1_filtered_feature_bc_matrix.h5\nGSM6106359_10dp2_filtered_feature_bc_matrix.h5\n```\n\nShowing us that we have two replicates per treatment, and four treatments:\n\n- ctrl: controls\n- 3dp: 3 days post injury\n- 7dp: 7 days post injury\n- 10dp: 10 days post injury\n\nUse the following code to read the h5 files in R, and create a combined Seurat object:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Seurat)\nlibrary(stringr)\n# get a list of file names\nh5_files <- list.files(\"data/project1/GSE202212_RAW/\", full.names = TRUE)\n\n# create a list of seurat objects\nseu_list <- lapply(h5_files,\n  function(x) {\n    # extract the sample name from the file name\n    sample_id <- basename(x) |> word(2, sep = \"_\")\n    \n    # read the h5 files as sparse matrix and convert it to a seurat object\n    Read10X_h5(x, use.names = TRUE, unique.features = TRUE) |> \n      CreateSeuratObject(project = sample_id) \n  }\n)\n\n# name the list according to the treatment name\nnames(seu_list) <- basename(h5_files) |> word(2, sep = \"_\")\n\n# merge the seurat objects and join the assay layers\nseu <- merge(seu_list[[1]], y = seu_list[2:length(seu_list)],\n             add.cell.ids = names(seu_list),\n             project = \"zebra\") |>\n  JoinLayers()\n```\n:::\n\n\n\n\n\n::: {.callout-important}\n## Project exercise\n\nwith this dataset, go through the steps we have performed during the course, and try to reproduce the results provided in the paper. Pay specific attention to quality control, clustering and annotation. \n:::\n\n## Tips\n\n- For mitochondrial genes, ribosomol genes and hemoglobin genes you can use the following patterns: `\"^mt-\"`, `\"^rp[sl]\"` and `\"^hb[^(p)]\"`. \n- Work iterative; meaning that based on results of an analyis, adjust the previous analysis. For example, if clustering is not according to cell types, try to adjust the number of components or the resolution. \n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}